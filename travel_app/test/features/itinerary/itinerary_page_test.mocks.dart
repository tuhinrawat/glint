// Mocks generated by Mockito 5.4.6 from annotations
// in travel_app/test/features/itinerary/itinerary_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:travel_app/models/itinerary.dart' as _i3;
import 'package:travel_app/services/itinerary_service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFlutterSecureStorage_0 extends _i1.SmartFake
    implements _i2.FlutterSecureStorage {
  _FakeFlutterSecureStorage_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeItinerary_1 extends _i1.SmartFake implements _i3.Itinerary {
  _FakeItinerary_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ItineraryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockItineraryService extends _i1.Mock implements _i4.ItineraryService {
  MockItineraryService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FlutterSecureStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeFlutterSecureStorage_0(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.FlutterSecureStorage);

  @override
  _i5.Future<_i3.Itinerary> generateItinerary({
    required String? destination,
    required double? budget,
    required String? travelType,
    required int? groupSize,
    required DateTime? startDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateItinerary,
          [],
          {
            #destination: destination,
            #budget: budget,
            #travelType: travelType,
            #groupSize: groupSize,
            #startDate: startDate,
          },
        ),
        returnValue: _i5.Future<_i3.Itinerary>.value(_FakeItinerary_1(
          this,
          Invocation.method(
            #generateItinerary,
            [],
            {
              #destination: destination,
              #budget: budget,
              #travelType: travelType,
              #groupSize: groupSize,
              #startDate: startDate,
            },
          ),
        )),
      ) as _i5.Future<_i3.Itinerary>);

  @override
  _i5.Future<_i3.Itinerary?> getSavedItinerary(
    String? destination,
    DateTime? startDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedItinerary,
          [
            destination,
            startDate,
          ],
        ),
        returnValue: _i5.Future<_i3.Itinerary?>.value(),
      ) as _i5.Future<_i3.Itinerary?>);
}
