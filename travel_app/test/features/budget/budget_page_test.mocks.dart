// Mocks generated by Mockito 5.4.6 from annotations
// in travel_app/test/features/budget/budget_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:travel_app/models/budget.dart' as _i4;
import 'package:travel_app/services/budget_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BudgetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBudgetService extends _i1.Mock implements _i2.BudgetService {
  MockBudgetService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveBudget(_i4.Budget? budget) => (super.noSuchMethod(
        Invocation.method(
          #saveBudget,
          [budget],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.Budget?> getLatestBudget() => (super.noSuchMethod(
        Invocation.method(
          #getLatestBudget,
          [],
        ),
        returnValue: _i3.Future<_i4.Budget?>.value(),
      ) as _i3.Future<_i4.Budget?>);

  @override
  double calculatePerPerson(
    double? totalBudget,
    int? groupSize,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculatePerPerson,
          [
            totalBudget,
            groupSize,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  Map<String, double> generateDefaultContributions(
    double? totalBudget,
    int? groupSize,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateDefaultContributions,
          [
            totalBudget,
            groupSize,
          ],
        ),
        returnValue: <String, double>{},
      ) as Map<String, double>);
}
